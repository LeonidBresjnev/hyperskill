2021-12-26 15:02:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL,  NAME VARCHAR(255),  PRIMARY KEY ( ID )) [42101-200]
2021-12-26 23:31:28 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 30 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 24 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-26 23:31:28 database: close
org.h2.message.DbException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:421)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 20 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	... 18 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-26 23:32:51 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 30 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 24 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-26 23:32:51 database: close
org.h2.message.DbException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:421)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 20 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	... 18 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-26 23:34:05 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 30 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 24 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-26 23:34:05 database: close
org.h2.message.DbException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:421)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 20 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	... 18 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-26 23:34:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID [42001-200]
2021-12-26 23:34:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID [42001-200]
2021-12-26 23:43:45 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 30 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 24 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-26 23:43:45 database: close
org.h2.message.DbException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:421)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 20 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	... 18 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-26 23:43:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID [42001-200]
2021-12-26 23:43:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO COMPANY (NAME) SUPER[*] COMPANY"; expected "DIRECT, SORTED, DEFAULT, VALUES, SET, (, WITH, SELECT, TABLE, VALUES"; SQL statement:
INSERT INTO COMPANY (NAME) Super company [42001-200]
2021-12-26 23:43:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID [42001-200]
2021-12-26 23:45:38 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 30 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 24 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-26 23:45:38 database: close
org.h2.message.DbException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:421)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 20 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	... 18 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-26 23:45:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID [42001-200]
2021-12-26 23:45:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO COMPANY (NAME) SUPER[*] COMPANY"; expected "DIRECT, SORTED, DEFAULT, VALUES, SET, (, WITH, SELECT, TABLE, VALUES"; SQL statement:
INSERT INTO COMPANY (NAME) Super company [42001-200]
2021-12-26 23:45:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID [42001-200]
2021-12-26 23:46:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-26 23:46:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO COMPANY (NAME) SUPER[*] COMPANY"; expected "DIRECT, SORTED, DEFAULT, VALUES, SET, (, WITH, SELECT, TABLE, VALUES"; SQL statement:
INSERT INTO COMPANY (NAME) Super company [42001-200]
2021-12-26 23:46:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-26 23:54:03 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 30 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 24 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-26 23:54:03 database: close
org.h2.message.DbException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:421)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 20 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	... 18 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-26 23:54:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-26 23:54:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO COMPANY (NAME) SUPER[*] COMPANY"; expected "DIRECT, SORTED, DEFAULT, VALUES, SET, (, WITH, SELECT, TABLE, VALUES"; SQL statement:
INSERT INTO COMPANY (NAME) Super company [42001-200]
2021-12-26 23:54:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-26 23:57:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-26 23:57:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO COMPANY (NAME) SUPER[*] COMPANY"; expected "DIRECT, SORTED, DEFAULT, VALUES, SET, (, WITH, SELECT, TABLE, VALUES"; SQL statement:
INSERT INTO COMPANY (NAME) Super company [42001-200]
2021-12-26 23:57:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:00:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT (ID, NAME) FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT (ID, NAME) FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:00:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO COMPANY (NAME) SUPER[*] COMPANY"; expected "DIRECT, SORTED, DEFAULT, VALUES, SET, (, WITH, SELECT, TABLE, VALUES"; SQL statement:
INSERT INTO COMPANY (NAME) Super company [42001-200]
2021-12-27 00:00:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT (ID, NAME) FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT (ID, NAME) FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:01:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:01:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO COMPANY (NAME) VALUES (SUPER COMPANY[*])"; expected "(, ., [, ::, AT, FORMAT, *, /, %, +, -, ||, ~, !~, NOT, LIKE, ILIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
INSERT INTO COMPANY (NAME) VALUES (Super company) [42001-200]
2021-12-27 00:01:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:06:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:06:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:07:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:07:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT ID, NAME FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT ID, NAME FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:11:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT * FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT * FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:11:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT * FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT * FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:27:24 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 30 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 24 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-27 00:27:24 database: close
org.h2.message.DbException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:421)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1545)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.Database.removeSession(Database.java:1307)
	at org.h2.engine.Session.close(Session.java:963)
	at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:453)
	at carsharing.Main.main(Main.java:128)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "Closing" [90028-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 20 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/Users/cob/IdeaProjects/Car Sharing/Car Sharing/task/src/carsharing/db/carsharing.mv.db failed; length 4096 at 16384 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1303)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:333)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:398)
	... 18 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:859)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:837)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 26 more
2021-12-27 00:27:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT * FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT * FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:27:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT * FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT * FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:30:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT * FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT * FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 00:30:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT * FROM TABLE COMPANY[*] ORDER BY ID;"; expected "("; SQL statement:
SELECT * FROM TABLE COMPANY ORDER BY ID; [42001-200]
2021-12-27 12:32:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE COMPANY (ID INTEGER NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY[*] KEY ( ID ))"; expected "INDEX, ON, NOT, DEFERRABLE, NOCHECK, CHECK, ,, )"; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY KEY ( ID )) [42001-200]
2021-12-27 12:32:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE COMPANY (ID INTEGER NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY[*] KEY ( ID ))"; expected "INDEX, ON, NOT, DEFERRABLE, NOCHECK, CHECK, ,, )"; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY KEY ( ID )) [42001-200]
2021-12-27 15:30:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE CAR (ID INTEGER NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY[*] KEY ( ID ))"; expected "INDEX, ON, NOT, DEFERRABLE, NOCHECK, CHECK, ,, )"; SQL statement:
CREATE TABLE CAR (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY KEY ( ID )) [42001-200]
2021-12-27 15:30:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE CAR (ID INTEGER NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY[*] KEY ( ID ))"; expected "INDEX, ON, NOT, DEFERRABLE, NOCHECK, CHECK, ,, )"; SQL statement:
CREATE TABLE CAR (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY KEY ( ID )) [42001-200]
2021-12-27 15:31:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE CAR (ID INTEGER NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY[*] KEY ( ID ))"; expected "INDEX, ON, NOT, DEFERRABLE, NOCHECK, CHECK, ,, )"; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY KEY ( ID )) [42001-200]
2021-12-27 15:31:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE CAR (ID INTEGER NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY[*] KEY ( ID ))"; expected "INDEX, ON, NOT, DEFERRABLE, NOCHECK, CHECK, ,, )"; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY KEY ( ID )) [42001-200]
2021-12-27 15:38:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE CAR (ID INTEGER NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY[*] KEY ( ID ))"; expected "INDEX, ON, NOT, DEFERRABLE, NOCHECK, CHECK, ,, )"; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY KEY ( ID )) [42001-200]
2021-12-27 15:38:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE CAR (ID INTEGER NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY[*] KEY ( ID ))"; expected "INDEX, ON, NOT, DEFERRABLE, NOCHECK, CHECK, ,, )"; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) PRIMARY KEY ( ID )) [42001-200]
2021-12-27 15:41:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "CONSTRAINT_10" depends on it; SQL statement:
DROP TABLE IF EXISTS COMPANY [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:28)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:130)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 15:41:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 15:41:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "CONSTRAINT_10" depends on it; SQL statement:
DROP TABLE IF EXISTS COMPANY [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:28)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:130)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 15:41:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 15:41:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-200]
2021-12-27 15:41:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-200]
2021-12-27 15:41:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-200]
2021-12-27 15:42:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-200]
2021-12-27 15:42:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-200]
2021-12-27 15:42:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-200]
2021-12-27 19:09:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "CAR" because "CONSTRAINT_52" depends on it; SQL statement:
DROP TABLE IF EXISTS CAR [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:37)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:09:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "CONSTRAINT_10" depends on it; SQL statement:
DROP TABLE IF EXISTS COMPANY [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:42)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:09:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:09:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:09:02 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "CAR" because "CONSTRAINT_52" depends on it; SQL statement:
DROP TABLE IF EXISTS CAR [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:37)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:09:03 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "CONSTRAINT_10" depends on it; SQL statement:
DROP TABLE IF EXISTS COMPANY [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:42)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:09:03 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:09:03 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:09:03 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "CAR" because "CONSTRAINT_52" depends on it; SQL statement:
DROP TABLE IF EXISTS CAR [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:37)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:09:03 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "CONSTRAINT_10" depends on it; SQL statement:
DROP TABLE IF EXISTS COMPANY [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:42)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:09:03 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:09:03 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:09:03 jdbc[10]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCarTable(DatabaseUtil.java:100)
	at CarSharingTest.test7_testAddCar(CarSharingTest.java:201)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:09:03 jdbc[10]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCarTable(DatabaseUtil.java:100)
	at CarSharingTest.test7_testAddCar(CarSharingTest.java:201)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:15:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "CAR" because "CONSTRAINT_52" depends on it; SQL statement:
DROP TABLE IF EXISTS CAR [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:37)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:15:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "CONSTRAINT_10" depends on it; SQL statement:
DROP TABLE IF EXISTS COMPANY [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:42)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:15:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:15:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:15:56 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "CAR" because "CONSTRAINT_52" depends on it; SQL statement:
DROP TABLE IF EXISTS CAR [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:37)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:15:56 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "CONSTRAINT_10" depends on it; SQL statement:
DROP TABLE IF EXISTS COMPANY [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:42)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:15:57 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:15:57 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:15:57 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "CAR" because "CONSTRAINT_52" depends on it; SQL statement:
DROP TABLE IF EXISTS CAR [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:37)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:15:57 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "CONSTRAINT_10" depends on it; SQL statement:
DROP TABLE IF EXISTS COMPANY [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:42)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:15:57 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:15:57 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:15:57 jdbc[10]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCarTable(DatabaseUtil.java:100)
	at CarSharingTest.test7_testAddCar(CarSharingTest.java:201)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:15:57 jdbc[10]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCarTable(DatabaseUtil.java:100)
	at CarSharingTest.test7_testAddCar(CarSharingTest.java:201)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:15:57 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "A" not found; SQL statement:
SELECT a.*, b.RENTED_CAR_ID FROM CAR as aLEFT JOIN CUSTOMER as b on a.id = b.RENTED_CAR_ID WHERE COMPANY_ID = 4 ORDER BY ID; [42102-200]
2021-12-27 19:15:57 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "A" not found; SQL statement:
SELECT a.*, b.RENTED_CAR_ID FROM CAR as aLEFT JOIN CUSTOMER as b on a.id = b.RENTED_CAR_ID WHERE COMPANY_ID = 4 ORDER BY ID; [42102-200]
2021-12-27 19:17:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "CAR" because "CONSTRAINT_52" depends on it; SQL statement:
DROP TABLE IF EXISTS CAR [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:37)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:17:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "CONSTRAINT_10" depends on it; SQL statement:
DROP TABLE IF EXISTS COMPANY [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:42)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:17:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:17:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:17:01 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "CAR" because "CONSTRAINT_52" depends on it; SQL statement:
DROP TABLE IF EXISTS CAR [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:37)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:17:01 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "CONSTRAINT_10" depends on it; SQL statement:
DROP TABLE IF EXISTS COMPANY [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:42)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:17:01 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:17:01 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:17:02 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "CAR" because "CONSTRAINT_52" depends on it; SQL statement:
DROP TABLE IF EXISTS CAR [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:37)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:17:02 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "CONSTRAINT_10" depends on it; SQL statement:
DROP TABLE IF EXISTS COMPANY [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:42)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:17:02 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:17:02 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:17:02 jdbc[10]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCarTable(DatabaseUtil.java:100)
	at CarSharingTest.test7_testAddCar(CarSharingTest.java:201)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:17:02 jdbc[10]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCarTable(DatabaseUtil.java:100)
	at CarSharingTest.test7_testAddCar(CarSharingTest.java:201)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:17:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "CAR" because "CONSTRAINT_52" depends on it; SQL statement:
DROP TABLE IF EXISTS CAR [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:37)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:17:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "CONSTRAINT_10" depends on it; SQL statement:
DROP TABLE IF EXISTS COMPANY [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:42)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:272)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2021-12-27 19:17:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:17:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:20:47 jdbc[13]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:229)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:30)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:270)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 23 more
2021-12-27 19:20:47 jdbc[13]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:229)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:30)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:270)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 23 more
2021-12-27 19:22:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:24 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:24 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:24 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:24 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:24 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:24 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:24 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:24 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:24 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:24 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:22:24 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:22:25 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:25 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:22:25 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:32 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:33 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:33 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:33 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:33 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:33 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:33 jdbc[11]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:229)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:30)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:271)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 23 more
2021-12-27 19:23:33 jdbc[11]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:229)
	at carsharing.CompanyDAOImpl.<init>(CompanyDAOImpl.java:30)
	at carsharing.menu.<init>(Main.java:11)
	at carsharing.Main.main(Main.java:271)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 23 more
2021-12-27 19:23:33 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:33 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:33 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:34 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:34 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:23:34 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:55 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:55 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:55 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:55 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:55 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:55 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:55 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:55 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:55 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:56 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:24:56 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:24:56 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:56 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:24:56 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:49 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:49 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:49 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:50 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:50 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:50 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:50 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:50 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:50 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:50 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:33:50 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:33:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:33:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:03 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:03 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:03 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:03 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:03 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:03 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:04 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:04 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:04 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:04 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:37:04 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:37:04 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:04 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:04 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:48 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:48 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:48 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:49 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:49 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:49 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:49 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:49 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:49 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:49 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:37:49 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:37:49 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:49 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:37:49 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:49 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:49 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:49 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:49 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:49 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:49 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:49 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:50 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:50 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:50 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:38:50 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:38:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:38:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:36 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:36 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:36 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:36 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:36 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:36 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:37 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:37 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:37 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:37 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:40:37 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:40:37 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:37 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:37 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:40:37 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "UPDATE CUSTOMER SET RENTED_CAR_ID = NULLWHERE ID[*] = 1"; SQL statement:
UPDATE CUSTOMER SET RENTED_CAR_ID = NULLWHERE ID = 1 [42000-200]
2021-12-27 19:44:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:32 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:32 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:32 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:32 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:32 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:32 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:33 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:33 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:33 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:33 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:44:33 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:44:33 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:33 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:33 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:44:33 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "UPDATE CUSTOMER SET RENTED_CAR_ID = NULLWHERE ID[*] = 1"; SQL statement:
UPDATE CUSTOMER SET RENTED_CAR_ID = NULLWHERE ID = 1 [42000-200]
2021-12-27 19:47:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:56 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:56 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:56 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:56 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:56 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:56 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:56 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:56 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:57 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:57 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:47:57 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:47:57 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:57 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:57 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:57 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:57 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:47:57 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:29 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:29 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:29 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:29 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:29 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:29 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:29 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:30 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:30 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:30 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:48:30 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:48:30 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:30 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:30 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:30 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:30 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:48:30 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:34 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:35 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:35 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:35 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:35 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:35 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:35 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:35 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:35 jdbc[11]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:35 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:50:35 jdbc[12]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:252)
	at DatabaseUtil.getConnection(DatabaseUtil.java:16)
	at DatabaseUtil.clearCustomerTable(DatabaseUtil.java:108)
	at CarSharingTest.test8_testAddCustomer(CarSharingTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.common.ReflectionUtils.invokeMethod(ReflectionUtils.java:87)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$1(DynamicTesting.java:284)
	at org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:252)
	at org.hyperskill.hstest.testing.runner.AsyncMainMethodRunner.lambda$runMain$0(AsyncMainMethodRunner.java:33)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 24 more
2021-12-27 19:50:35 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:35 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:36 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:36 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:36 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE car (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  COMPANY_ID INT NOT NULL,  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID), PRIMARY KEY ( ID )) [42101-200]
2021-12-27 19:50:36 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" already exists; SQL statement:
CREATE TABLE CUSTOMER (ID INTEGER not NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE,  RENTED_CAR_ID  INT,  FOREIGN KEY (RENTED_CAR_ID) REFERENCES CAR(ID), PRIMARY KEY ( ID )) [42101-200]
