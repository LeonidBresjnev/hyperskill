hyperskill_project:
  id: 43
  ide_files: https://stepik.org/media/attachments/lesson/204791/additional_files.json
  is_template_based: false
  use_ide: true
update_date: Sat, 18 Dec 2021 17:48:46 UTC
stages:
- id: 228
  step: 5324
  is_completed: true
- id: 229
  step: 5325
  is_completed: true
- id: 230
  step: 5326
  is_completed: true
- id: 231
  step: 5327
  is_completed: false
topics:
  0:
  - title: Write, compile, and run
    theory_id: 3739
  - title: JVM, JRE, and JDK
    theory_id: 3499
  - title: Units of information
    theory_id: 6865
  - title: Immutability
    theory_id: 7929
  - title: IDE
    theory_id: 10996
  - title: Computer algorithms
    theory_id: 16547
  - title: The big O notation
    theory_id: 16699
  - title: Data structures
    theory_id: 16927
  - title: Introduction to operating systems
    theory_id: 9704
  - title: Computer programming
    theory_id: 8739
  - title: Introduction to Java
    theory_id: 3500
  - title: Basic literals
    theory_id: 3522
  - title: Overview of the basic program
    theory_id: 3521
  - title: Printing data
    theory_id: 3749
  - title: Types and variables
    theory_id: 3518
  - title: Sizes and ranges
    theory_id: 3532
  - title: Type casting
    theory_id: 3510
  - title: Comments
    theory_id: 3520
  - title: Coding style conventions
    theory_id: 12411
  - title: Naming variables
    theory_id: 3513
  1:
  - title: The concept of patterns
    theory_id: 3611
  - title: Regexps basics
    theory_id: 7580
  - title: Regexps in Java
    theory_id: 3670
  - title: Sets, ranges, alternations
    theory_id: 3674
  - title: Shorthands
    theory_id: 3680
  - title: Quantifiers
    theory_id: 3687
  - title: Regexes in programs
    theory_id: 3696
  - title: Patterns and Matcher
    theory_id: 3712
  - title: Match results
    theory_id: 3716
  - title: Builder
    theory_id: 5130
  - title: Interface
    theory_id: 3615
  2:
  - title: Design principles
    theory_id: 8956
  - title: Single Responsibility Principle
    theory_id: 8963
  - title: Introduction to software architecture
    theory_id: 15368
  - title: Class Diagrams
    theory_id: 15588
  - title: Reflection basics
    theory_id: 3609
  - title: Introduction to creational patterns
    theory_id: 16251
  - title: Factory Method and Prototype
    theory_id: 16430
  - title: Abstract factory
    theory_id: 17108
  - title: LocalDate
    theory_id: 3592
  - title: LocalTime
    theory_id: 3593
  - title: LocalDateTime
    theory_id: 3617
  - title: Command
    theory_id: 7762
  - title: Encapsulating object creation
    theory_id: 3577
  - title: Template method
    theory_id: 5155
  - title: Factory method
    theory_id: 5761
  - title: Abstract factory
    theory_id: 5732
  - title: Protected modifier
    theory_id: 6692
  - title: Referencing subclass objects
    theory_id: 3585
  - title: Polymorphism
    theory_id: 3587
  - title: Abstract class
    theory_id: 3597
  - title: Abstract class vs interface
    theory_id: 3563
  - title: Runtime type checking
    theory_id: 3571
  3:
  - title: What are streams
    theory_id: 5533
  - title: Formatted output
    theory_id: 7046
  - title: Hierarchy of exceptions
    theory_id: 3570
  - title: Exception handling
    theory_id: 3552
  - title: Command-line arguments
    theory_id: 3566
  - title: Files
    theory_id: 3635
  - title: Reading files
    theory_id: 3636
  - title: Writing files
    theory_id: 3652
  - title: Output streams
    theory_id: 8837
  - title: Input streams
    theory_id: 9723
  - title: Serialization basics
    theory_id: 8147
  - title: Custom serialization
    theory_id: 3616
  - title: The Object class
    theory_id: 3596
